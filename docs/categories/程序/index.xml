<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>程序 on Bruce 2233</title>
        <link>https://bruce2233.github.io/categories/%E7%A8%8B%E5%BA%8F/</link>
        <description>Recent content in 程序 on Bruce 2233</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 04 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bruce2233.github.io/categories/%E7%A8%8B%E5%BA%8F/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>golang 随笔</title>
        <link>https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/</link>
        <pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate>
        
        <guid>https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/</guid>
        <description>&lt;h1 id=&#34;evnet---an-event-driven-networking-framework-forked-from-gnet&#34;&gt;evnet - An event-driven networking framework forked from gnet&lt;/h1&gt;
&lt;h2 id=&#34;事件-线程协程调用链&#34;&gt;事件-线程/协程调用链&lt;/h2&gt;
&lt;h2 id=&#34;evnet性能强于net原生库的原理&#34;&gt;evnet性能强于net原生库的原理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;从net包goroutine-per-connection同步模式编程&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;注意点&#34;&gt;注意点&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;对系统资源的释放.Fd, buffer.&lt;/li&gt;
&lt;li&gt;粘包/拆包&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;启发&#34;&gt;启发&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;围绕交付物的核心&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>golang 随笔</title>
        <link>https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/</link>
        <pubDate>Fri, 29 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/</guid>
        <description>&lt;h1 id=&#34;golang-指针&#34;&gt;golang 指针&lt;/h1&gt;
&lt;h2 id=&#34;多级指针与图描述的映射-理清指针的终极解决方案&#34;&gt;多级指针与图描述的映射-理清指针的终极解决方案&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直观的图描述
&lt;ul&gt;
&lt;li&gt;一个变量对应一个节点&lt;/li&gt;
&lt;li&gt;指针变量与被指向变量之间用一条线连接
&lt;img src=&#34;https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer1.jpg&#34;
	width=&#34;1840&#34;
	height=&#34;1717&#34;
	srcset=&#34;https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer1_hu07d8f38f6d3cd28c675821f9d7aec641_269521_480x0_resize_q75_box.jpg 480w, https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer1_hu07d8f38f6d3cd28c675821f9d7aec641_269521_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;107&#34;
		data-flex-basis=&#34;257px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;指针操作与图的映射
&lt;ul&gt;
&lt;li&gt;左侧指针,右侧取地址&lt;code&gt;&amp;amp;&lt;/code&gt; 左侧变量的节点指向&amp;amp;符后的变量节点, 实例见图: &lt;code&gt;c = &amp;amp;a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;左侧指针,右侧指针&lt;code&gt;=&lt;/code&gt; 左侧变量节点指向右侧变量节点指向的节点, 例: &lt;code&gt;e = d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;指针取内容&lt;code&gt;*&lt;/code&gt; 指针变量取地址的表达式等价于它所指向的节点, 例: &lt;code&gt;*d == c&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;空指针
&lt;ul&gt;
&lt;li&gt;指针变量在初始化后不能使用*, 必须赋值后才可使用, 此时a == nil 为真.
&lt;img src=&#34;https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer2.jpg&#34;
	width=&#34;2249&#34;
	height=&#34;1717&#34;
	srcset=&#34;https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer2_hu2400c2f9ef7df9fb69513a09dd0ce584_290359_480x0_resize_q75_box.jpg 480w, https://bruce2233.github.io/p/golang-%E9%9A%8F%E7%AC%94/pointer2_hu2400c2f9ef7df9fb69513a09dd0ce584_290359_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;314px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注意事项
&lt;ul&gt;
&lt;li&gt;关注变量类型&lt;/li&gt;
&lt;li&gt;节点只能修改后继节点的值而无法修改兄弟节点的指向&lt;/li&gt;
&lt;li&gt;golang中的接口可理解为&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你能熟练运用3条操作,恭喜你解锁了多层指针的黑魔法. 从此, 程序猿之间的隔阂将被打破(物理级), 所以, 奔涌吧, 多层指针!&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
